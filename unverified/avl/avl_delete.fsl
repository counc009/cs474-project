(Var x Loc)

(Function left   Loc Loc)
(Function right  Loc Loc)
(Function key    Loc Int)
(Function height Loc Int)

(RecFunction Min  Loc Int)
(RecFunction Max  Loc Int)
(Var plus_infty Int)
(Var minus_infty Int)

(lemma (x) (< (key x) plus_infty))
(lemma (x) (< minus_infty (key x)))

(RecDef (Min x) (ite (= x nil) plus_infty
                (ite (<= (key x) (Min (left x)))
                  (ite (<= (key x) (Min (right x)))
                    (key x)
                    (Min (right x))
                  )
                  (ite (<= (Min (left x)) (Min (right x)))
                    (Min (left x))
                    (Min (right x))
                  )
                )))
(RecDef (Max x) (ite (= x nil) minus_infty
                (ite (>= (key x) (Max (left x)))
                  (ite (>= (key x) (Max (right x)))
                    (key x)
                    (Max (right x))
                  )
                  (ite (>= (Max (left x)) (Max (right x)))
                    (Max (left x))
                    (Max (right x))
                  )
                )))

(RecFunction AVL    Loc Bool)
(RecFunction Keys   Loc SetInt)
(RecFunction Height Loc Int)

(RecDef (AVL x) (ite (= x nil) True
                     (and (AVL (left x))  (< (Max (left x)) (key x))
                          (AVL (right x)) (< (key x) (Min (right x)))
                          (not (IsMember x (Sp (AVL (antiSp (left x))))))
                          (not (IsMember x (Sp (AVL (antiSp (right x))))))
                          (= EmptySetLoc (SetIntersect (Sp (AVL (antiSp (left x))))
                                                       (Sp (AVL (antiSp (right x))))))
                          (or
                            (and (= (Height (left x)) (Height (right x)))
                                 (= (height x) (+ (Height (left x)) (IntConst 1))))
                            (and (= (Height (left x)) (+ (Height (right x)) (IntConst 1)))
                                 (= (height x) (+ (Height (right x)) (IntConst 2))))
                            (and (= (Height (right x)) (+ (Height (left x)) (IntConst 1)))
                                 (= (height x) (+ (Height (left x)) (IntConst 2))))))))

(RecDef (Keys x) (ite (= x nil) EmptySetInt
                                (SetAdd
                                  (SetUnion (Keys (left x)) (Keys (right x)))
                                  (key x))))

(RecDef (Height x) (ite (= x nil) (IntConst 0)
                                  (ite (< (Height (left x)) (Height (right x)))
                                       (+ (IntConst 1) (Height (right x)))
                                       (+ (IntConst 1) (Height (left x))))))

(lemma (x) (=> (AVL x) (= (Sp (AVL x)) (Sp (Keys   x)))))
(lemma (x) (=> (AVL x) (= (Sp (AVL x)) (Sp (Min    x)))))
(lemma (x) (=> (AVL x) (= (Sp (AVL x)) (Sp (Max    x)))))
(lemma (x) (=> (AVL x) (= (Sp (AVL x)) (Sp (Height x)))))

(Var k Int)
(Var xl Loc)
(Var xr Loc)
(Var tmp Loc)
(Var ret Loc)
(Var min Int)

(Program avl_find_smallest (x min))
(Pre (and (AVL x) (not (= x nil)) ))
(Post (and (AVL x) (not (= x nil)) (= (Keys x) (Old (Keys x)))
           (= min (Min x)) ))

(return)

(Program avl_balance (x ret))
(Pre (and (AVL (left x))  (< (Max (left x)) (key x))
          (AVL (right x)) (< (key x) (Min (right x)))
          (= EmptySetLoc (SetIntersect (Sp (AVL (antiSp (left x))))
                                       (Sp (AVL (antiSp (right x))))))
          (not (IsMember x (Sp (AVL (antiSp (left x))))))
          (not (IsMember x (Sp (AVL (antiSp (right x))))))
          (<= (Height (right x)) (+ (IntConst 2) (Height (left x))))
          (<= (Height (left x))  (+ (IntConst 2) (Height (right x)))) ))
(Post (and (AVL ret)
           (= (Keys ret) (SetAdd (SetUnion (Old (Keys (left x)))
                                           (Old (Keys (right x)))) (key x)))
           (ite (= (Old (Height (right x))) (+ (IntConst 1) (Old (Height (left x)))))
                (= (Height ret) (+ (IntConst 1) (Old (Height (right x)))))
           (ite (= (Old (Height (left x))) (+ (IntConst 1) (Old (Height (right x)))))
                (= (Height ret) (+ (IntConst 1) (Old (Height (left x)))))
           (ite (= (Old (Height (left x))) (Old (Height (right x))))
                (= (Height ret) (+ (IntConst 1) (Old (Height (left x)))))
           (ite (= (Old (Height (right x))) (+ (IntConst 2) (Old (Height (left x)))))
                (ite (= (Old (Height (left (right x)))) (Old (Height (right (right x)))))
                     (= (Height ret) (+ (IntConst 1) (Old (Height (right x)))))
                     (= (Height ret) (Old (Height (right x)))))
           (ite (= (Old (Height (left x))) (+ (IntConst 2) (Old (Height (right x)))))
                (ite (= (Old (Height (left (left x)))) (Old (Height (right (left x)))))
                     (= (Height ret) (+ (IntConst 1) (Old (Height (left x)))))
                     (= (Height ret) (Old (Height (left x)))))
                False))))) ))

(return)

(Program avl_delete (x k ret))
(Pre (and (AVL x) ))
(Post (and (AVL ret) (= (Keys ret) (SetDel (Old (Keys x)) k))
           (or (= (Height ret) (Old (Height x)))
               (= (Height ret) (- (Old (Height x)) (IntConst 1)))) ))

(If (= x nil)
 Then
  (assign ret x)
  (return)
 Else
  (assign xl (left x))
  (assign xr (right x))
  (If (= k (key x))
   Then
    (If (and (= xl nil) (= xr nil))
     Then
      (free x)
      (assign ret nil)
      (return)
     Else (If (= xl nil)
     Then
      (free x)
      (assign ret xr)
      (return)
     Else (If (= xr nil)
     Then
      (free x)
      (assign ret xl)
      (return)
     Else
      (call avl_find_smallest (xr min))
      (call avl_delete (xr min tmp))
      (assign (key x) min)
      (assign (right x) tmp)
      (call avl_balance (x ret))
      (return)
    )))
   Else (If (< k (key x))
   Then
    (call avl_delete (xl k tmp))
    (assign (left x) tmp)
    (call avl_balance (x ret))
    (return)
   Else
    (call avl_delete (xr k tmp))
    (assign (right x) tmp)
    (call avl_balance (x ret))
    (return)
  ))
)
