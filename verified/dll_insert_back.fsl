(Var x Loc)
(Var k Int)

(Function next Loc Loc)
(Function prev Loc Loc)
(Function key  Loc Int)

(RecFunction DLL  Loc Bool)
(RecFunction Keys Loc SetInt)

(RecDef (DLL  x) (ite (= x nil) True
                 (ite (= (next x) nil) True
                    (and (= x (prev (next x)))
                         (DLL (next x))
                         (not (IsMember x (Sp (DLL (antiSp (next x))))))))))
(RecDef (Keys x) (ite (= x nil) EmptySetInt
                    (SetAdd (Keys (next x)) (key x))))

(lemma (x) (=> (DLL x) (= (Sp (DLL x)) (Sp (Keys x)))))

(Var ret Loc)
(Var oldkeysx SetInt)
(Var tail Loc)
(Var tailkeys SetInt)
(Var tmp Loc)

(Program dll_insert_back (x oldkeysx k ret))
(Pre (and (DLL x) (= (Keys x) oldkeysx)))
(Post (and (ite True True (= (next (next ret)) (next (next ret))))
           (DLL ret) (= (Keys ret) (SetAdd oldkeysx k))))

(If (= x nil)
 Then
  (alloc tail)
  (assume (not (= tail nil)))
  (assign (key tail) k)
  (assign (next tail) nil)
  (assign (prev tail) x)
  (assign ret tail)
  (return)
 Else
  (assign tail (next x))
  (assign tailkeys (Keys tail))
  (call dll_insert_back (tail tailkeys k tmp))
  (assign (next x) tmp)
  (assign (prev tmp) x)
  (assign ret x)
  (return)
)
